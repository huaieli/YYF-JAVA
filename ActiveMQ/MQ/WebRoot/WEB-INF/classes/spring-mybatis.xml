<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:rep="http://www.springframework.org/schema/data/repository"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc 
		http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/data/jpa 
		http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/data/repository 
		http://www.springframework.org/schema/data/repository/spring-repository.xsd"
	default-lazy-init="false">

	<!-- 引入JDBC配置文件 -->
	<!-- 引入方法一 -->
	<context:property-placeholder location="classpath:jdbc-demo.properties" />


	<!-- 扫描注解@Controller的类 -->
	<!--
		使用annotation
		自动注册bean,并检查@Required,@Autowired的属性已被注入base-package为需要扫描的包（含所有子包）
	-->
	<context:component-scan base-package="com.mq" />

<aop:aspectj-autoproxy proxy-target-class="true" />
	<!--
		启用Spring对@AspectJ的支持 <aop:aspectj-autoproxy proxy-target-class="true"
		/>
	-->

	<!-- Spring 和 Mybatis 进行完美整合 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--
			<property name="mapperLocations" value="classpath: */*Mapper.xml" />
		-->
		<property name="mapperLocations" value="classpath:com/mq/**/*Mapper.xml" />
	</bean>

	<!-- 扫描basePackage下所有dao接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mq" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- 事务管理器配置, Jpa单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 注解驱动 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<!--
		创建一个sqlSession实例，线程安全的，可以在所有DAO实例共享，原理是将sqlSession，事务与当前线程挂钩 <bean
		name="sqlSessionTemplateASS" id="sqlSession"
		class="org.mybatis.spring.SqlSessionTemplate"> <constructor-arg
		index="0" ref="sqlSessionFactory" /> </bean>
	-->

	<!--
		拦截器方式配置事物 <tx:advice id="transactionAdvice"
		transaction-manager="transactionManager"> <tx:attributes> <tx:method
		name="doTransaction" propagation="REQUIRED"
		rollback-for="java.lang.Exception" /> </tx:attributes> </tx:advice>
		<aop:config> <aop:pointcut id="transactionPointcut"
		expression="execution(* com.framework.demo.service..*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
		advice-ref="transactionAdvice" /> </aop:config>
	-->

	<!-- 数据源配置 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;emptyStringsConvertToZero=true&amp;jdbcCompliantTruncation=false&amp;noDatetimeStringSync=true&amp;nullCatalogMeansCurrent=true&amp;nullNamePatternMatchesAll=true&amp;transformedBitIsBoolean=false&amp;dontTrackOpenResources=true&amp;zeroDateTimeBehavior=convertToNull&amp;useServerPrepStmts=false&amp;autoClosePStmtStreams=true&amp;processEscapeCodesForPrepStmts=false&amp;useFastDateParsing=false&amp;populateInsertRowWithDefaultValues=false&amp;useDirectRowUnpack=false" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
		<!--     	<property name="driverClassName" value="${driver}" /> -->
		<!--     	<property name="url" value="${url}" /> -->
		<!--     	<property name="username" value="${username}" /> -->
		<!--     	<property name="password" value="${password}" /> -->
		<!--         连接池最大数量   -->
		<!--
			<property name="maxActive" value="${maxActive}"></property>
		-->
		<!--         连接池最大空闲   -->
		<!--
			<property name="maxIdle" value="${maxIdle}"></property>
		-->
		<!--         连接池最小空闲   -->
		<!--
			<property name="minIdle" value="${minIdle}"></property>
		-->
		<!--         获取连接最大等待时间   -->
		<!--
			<property name="maxWait" value="${maxWait}"></property>
		-->
	</bean>
</beans>
